"""
Author: Thomas Cokelaer
Affiliation: Institut Pasteur
Aim: Find Fix contaminant in the fastq
Data: paired end to be placed inside ./fastq_raw
Run: snakemake -s Snakefile
Changelog:
"""
import sequana
from sequana import snaketools as sm

# This must be defined before the include 
configfile: "config.yaml"

# The actual pipeline
include: sm.modules['dag']               # Create DAG file
include: sm.modules["fastq_sampling"]    # include sampling of original data
include: sm.modules['bwa_fix']           # Search for the Fix
include: sm.modules['bwa_bam_to_fastq']  # Save mapped and unmapped data in bwa_fix/
include: sm.modules['fastqc']            # quality control
include: sm.modules['cleanup']           # Possibly one can cleanup things (for testing)
include: sm.modules['conda']             # Create requirements.txt (dependencies)


workdir: "."

############# NOTHING to change here below
_dataset = sm.FileFactory(config['input']).dataset


rule all:
    input:
        # required to start the pipeline (of fastq_sampling)
        expand("fastq_raw/{dataset}", dataset=_dataset),
        "bwa_fix/contaminant_R1.mapped.fastq",
        "bwa_fix/contaminant_R2.mapped.fastq",
        "fastqc/fastqc.done",
        "report/index.html",
        "report/bwa_fix.html"
    version: sequana.version


rule report:
    input:
        dag = "dag.svg", 
        other = "bwa_fix/fix_stats.json", 
        fastqc = "fastqc/fastqc.done",
        conda = "report/requirements.txt"
    output: "report/index.html", "report/bwa_fix.html"
    run:
        from sequana import report_main
        from sequana import report_fix
        from sequana import report_fastqc

        # Main page
        s = report_main.SequanaReport()
        s.create_report()

        # Fix page
        s = report_fix.FixReport(output_filename="bwa_fix.html")
        s.input_filename = "bwa_fix/fix_stats.json"
        s.create_report()

        s = report_fastqc.FastQCReport()
        s.create_report()

        shell("cp Snakefile report/")
        shell("cp dag.svg report/")


rule general_cleanup:
    params: cleanup=["report.html"]

