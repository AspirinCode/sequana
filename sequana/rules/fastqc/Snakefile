"""



"""
import sequana.snakemake as sm

# find all fastq files and parse them through fastqc


#sm.get_filenames("fastq_raw/*fastq.gz")]
# TODO also include the zip 

data_tags =  ["Hm2_GTGAAA_L005_R1_001", "Hm2_GTGAAA_L005_R2_001"]




# fastq_results must be created for now
rule fastqc:
    input: 
        expand("fastq_sampling/{dataset}.fastq.gz", dataset=data_tags),
        expand("bwa_fix/{dataset}.unmapped.fastq", 
            dataset=['contaminant_R1', 'contaminant_R2']),
        expand("bwa_fix/{dataset}.mapped.fastq", 
            dataset=['contaminant_R1', 'contaminant_R2']),
    output: 
        expand("fastqc/{dataset}_fastqc.html", dataset=data_tags),
        expand("fastqc/{dataset}.unmapped_fastqc.html", 
            dataset=['contaminant_R1', 'contaminant_R2']),
        expand("fastqc/{dataset}.mapped_fastqc.html", 
            dataset=['contaminant_R1', 'contaminant_R2']),
        touch("fastqc.done")
    params: dir="fastqc"
    threads: 6
    log: 
        expand("{dataset}.log", dataset=data_tags),
        expand("{dataset}.log", dataset=['contaminant_R1', 'contaminant_R2'])
    run: 
        shell("fastqc -t {threads} --outdir {params.dir} -f fastq {input} > {params.dir}/{log}")



rule fastqc_output:
    input: "fastqc.done"
