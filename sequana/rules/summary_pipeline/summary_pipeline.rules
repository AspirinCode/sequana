rule summary_pipeline:
    """ Create a JSON file that summarise all information about the pipeline.
    This JSON file is used by the sequana reports. It must be created
    the summary report for your samples.
    
    Required input:
        - __summary_pipeline__inputs = list of the pipeline input.
        - __summary_pipeline__outputs = list of the pipeline outputs.
        - __summary_pipeline__html = list of html page created by rules.
        - __summary_pipeline__rulegraph = the rulegraph SVG filename.
        - __summary_pipeline__requirements = the requirements filename.
        - __summary_pipeline__snakefile = the snakemake file.
        - __summary_pipeline__config = the config file.

    Required output:
        - __summary_pipeline__json_output = the json output file.

    Required params:
        - __summary_pipeline__name = pipeline name.

    """
    input:
        inputs = __summary_pipeline__inputs,
        outputs = __summary_pipeline__outputs,
        html = __summary_pipeline__html,
        rulegraph = __summary_pipeline__rulegraph,
        snakefile = __summary_pipeline__snakefile,
        config = __summary_pipeline__config,
        requirements = __summary_pipeline__requirements
    output:
        json = __summary_pipeline__json_output
    params:
        name = __summary_pipeline__name
    run:
        import json
        
        summary = {'tool': 'sequana_summary',
                   'inputs': input['inputs'],
                   'outputs': input['outputs'],
                   'html': input['html'],
                   'rulegraph': input['rulegraph'],
                   'requirements': input['requirements'],
                   'snakefile': input['snakefile'],
                   'config': input['config'],
                   'name': params['name']}
        js = json.dumps(summary)
        with open(output['json'], 'w') as fp:
            print(js, file=fp)
