"""
Author: TC
Affiliation: IP
Aim: create a sample data set for quick testing
Type: module
Input: fastq_raw/{}*gz
Output: fastq_sampling/{}*gz
"""
from sequana.snaketools import FileFactory

__sequana__fastq_sampling = [":enable", ":N", "samples:glob"]


_fsf = FileFactory(config['samples']['glob'])

"""rule fastq_sampling_input:
    input:
        expand(_fsf.pathname + "{dataset}", dataset=_fsf.basenames)
"""

if config['fastq_sampling']['enable'] is True:
    rule fastq_sampling:
        """Select a sample from raw FastQ files"""
        input: _fsf.pathname + "{dataset}"
        output: "fastq_raw/{dataset}"
        params: N = config["fastq_sampling"]['N']
        message: "fastq_sampling extracting %s reads" % config['fastq_sampling']['N']
        run:
            shell("fastq_head {input} {params.N} {output}")
else:
    # No sampling, use raw data so let us create sym links
    rule fastq_sampling:
        # Using temp for the output is very important here.
        # If the sym link stayed, this would create clashes in the other case
        # when input will be the same as output
        input: _fsf.pathname + "{dataset}"
        output: temp("fastq_raw/{dataset}")
        message: "fastq_sampling creating symbolic links"
        run:
            #shell("rm {output}")
            shell("ln -sf $(pwd)/{input} {output}")


