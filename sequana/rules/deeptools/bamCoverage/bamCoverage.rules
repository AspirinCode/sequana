rule bamCoverage:
    """
    This tool takes an alignment of reads or fragments as input (BAM file) and generates a coverage track
    (bigWig or bedGraph) as output. The coverage is calculated as the number of reads per bin, where bins are
    short consecutive counting windows of a defined size. It is possible to extended the length of the reads
    to better reflect the actual fragment length. bamCoverage offers normalization by scaling factor, Reads Per
    Kilobase per Million mapped reads (RPKM), and 1x depth (reads per genome coverage, RPGC).
    Is part of deeptools http://deeptools.readthedocs.io/en/latest/index.html

    Required input:
        __bamCoverage__input: list of bam files

    Required output:
        __bamCoverage__output: normalized bigwig file
    """
    input:
        __bamCoverage__input
    params:
        bs = config['coverage']['binSize'],
        gs = config['coverage']['genomeSize'],
        minFL = config['coverage']['minFragmentLength'],
        maxFL = config['coverage']['maxFragmentLength'],
        exRead = config['coverage']['extendReads'],
        options = config['coverage']['options']

    log:
        __bamCoverage__log
    output:
        __bamCoverage__output
    threads:
        config['coverage']['threads']
    shell:
        """
        if [ ! -e {input}.bai ] ; then
            samtools index {input}
        fi
        bamCoverage --bam {input} -o {output} --numberOfProcessors 4 \
        --binSize {params.bs} --normalizeTo1x {params.gs} \
        --extendReads {params.exRead} --minFragmentLength {params.minFL}  \
        --maxFragmentLength {params.maxFL} {params.options} 2> {log}
        """