rule polish:
    """
    Polishing via the tool polish is an optional step, but highly recommended.
    The algorithm behind polish is the arrow model that also used for CCS generation and polishing of de-novo assemblies.
    This step can be massively parallelized by splitting the unpolished.bam file. Split BAM files can be generated by cluster.


    Required input:
        __polish__input_bam: unpolished bam file,
        __polish__input_subreads: unpolished bam file

    Required output:
        __polish__output: output polished bam file

    params:
        config['cluster']['options']: any options recognized by isoseq3 cluster
    """
    input:
        unpolished = __polish__input_bam,
        subreads =  __polish__input_subreads
    output:
        suffixe = __polish__output,
        hq_reads = __polish__output_hq,
        lq_reads = __polish__output_lq
    params:
        options = config['polish']['options']
    threads:
        config['polish']['threads']
    log:
        out = __polish__log_std,
        err = __polish__log_err
    shell:
        """
        isoseq3 polish {input.unpolished} {input.subreads} {output.suffixe} -j {threads} {params.options} --verbose > {log.out} 2> {log.err}
        """
